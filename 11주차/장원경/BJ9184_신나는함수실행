import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class BJ9184_신나는함수실행2 {

	static int a,b,c;
	static int res;
	static int dp[][][];
	public static void main(String[] args) throws IOException {

		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		dp=new int[51][51][51];
		
		while(true) {
			StringTokenizer st=new StringTokenizer(br.readLine());
			a=Integer.parseInt(st.nextToken());
			b=Integer.parseInt(st.nextToken());
			c=Integer.parseInt(st.nextToken());
			
			if(a==-1 && b==-1 && c==-1) break;
			
			if(a<0 || b<0 || c<0) res=1; 		
			else
				res=w(a,b,c);
			System.out.println("w("+a+", "+b+", "+c+")"+" = "+res);

			}

	}
	private static int w(int i, int j, int k) {
		
		if(dp[i][j][k]!=0) return dp[i][j][k];
		
		if(i<=0 || j<=0 || k<=0)
			return 1;
		
		else if(i>20 || j>20 || k>20) 
			return dp[20][20][20]=w(20,20,20);
		
		else if(i<j && j<k) 
			return dp[i][j][k]= w(i,j,k-1) + w(i,j-1,k-1) - w(i,j-1,k);
		
		else 
			return dp[i][j][k] = w(i-1, j, k) + w(i-1, j-1, k) + w(i-1, j, k-1) - w(i-1, j-1, k-1);
			
	}
}
